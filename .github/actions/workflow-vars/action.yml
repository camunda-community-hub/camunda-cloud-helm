name: Workflow vars
description: Set common vars for workflow
inputs:
  persistent:
    description: Don't use changing vars like SHA commit
    # TODO: Change that to real bool when it's supported in GHA.
    default: "false"
  setup-flow:
    description: The chart setup flow either "install" or "upgrade".
    default: "install"
  ingress-hostname-base:
    description: The base of the Ingress hostname.
  platform:
    description: The deployment cloud platform like GKE or ROSA.
  identifier-base:
    description: The fixed string in the identifier of the deployment it could be PR number or another specified name.
# NOTE: This is not an exclusive list, some vars are exported as env var not an output.
outputs:
  identifier:
    description: The unique identifier of the deployment where the workflow could be triggered by pull_request or workflow_dispatch.
    value: ${{ steps.vars.outputs.identifier }}
  ingress-host:
    description: Ingress hostname that will be used in the test
    value: ${{ steps.vars.outputs.ingress-host }}

runs:
  using: composite
  steps:
  - name: Set workflow vars
    id: vars
    shell: bash
    run: |
      # Generate workflow vars.
      rand_gen() {
        python -c "import random, string; print(''.join(random.SystemRandom().choice(string.ascii_lowercase + string.digits) for _ in range(20)))"
      }

      is_pr() {
        echo ${{ github.event.pull_request.number }} | grep -q .
      }

      # NOTE: We should use the matrix job id var once it's available.
      # https://github.com/orgs/community/discussions/40291
      GITHUB_WORKFLOW_JOB_ID=$(rand_gen | cut -c 1-6)

      echo "Env vars:"

      # Workflow.
      echo "GITHUB_WORKFLOW_JOB_ID=$GITHUB_WORKFLOW_JOB_ID" | tee -a $GITHUB_ENV
      echo "GITHUB_WORKFLOW_RUN_ID=${{ github.run_id }}" | tee -a $GITHUB_ENV

      # Namespace.
      TRIGGER_KEY=$(is_pr && echo "pr" || echo "id")
      TEST_NAMESPACE="camunda-platform-${TRIGGER_KEY}-${{ inputs.identifier-base }}"

      if [[ "${{ inputs.persistent }}" == 'false' ]]; then
        TEST_NAMESPACE="${TEST_NAMESPACE}-run-${{ github.run_id }}-sfx-${GITHUB_WORKFLOW_JOB_ID}"
      fi

      if [[ "${{ inputs.setup-flow }}" == 'upgrade' ]]; then
        TEST_NAMESPACE="${TEST_NAMESPACE}-upgrade"
      fi

      echo "TEST_NAMESPACE=${TEST_NAMESPACE}" | tee -a $GITHUB_ENV

      echo "Output vars:"

      # Deployment identifier.
      TEST_IDENTIFIER="${{ inputs.platform }}-${{ inputs.identifier-base }}"
      if [[ "${{ inputs.setup-flow }}" == 'upgrade' ]]; then
        TEST_IDENTIFIER="${TEST_IDENTIFIER}-upgrade"
      fi
      echo "identifier=${TEST_IDENTIFIER}" | tee -a $GITHUB_OUTPUT

      # Ingress hostname.
      TEST_INGRESS_HOST="${TEST_IDENTIFIER}.${{ inputs.ingress-hostname-base }}"
      if [[ "${{ inputs.persistent }}" == "false" ]] && is_pr; then
        TEST_INGRESS_HOST="${GITHUB_WORKFLOW_JOB_ID}-${TEST_INGRESS_HOST}"
      fi
      # The var is needed in some non-shell steps.
      echo "ingress-host=${TEST_INGRESS_HOST}" | tee -a $GITHUB_OUTPUT

      # Chart version.
      # Used to install previous supported versions of Camunda Helm charts.
      TEST_CHART_VERSION="$(yq '.version' charts/${CI_CHART_DIR}/Chart.yaml)"
      echo "TEST_CHART_VERSION=${TEST_CHART_VERSION}" | tee -a $GITHUB_ENV

    # Avoid confusion about the chart version since we only change the version during the release process
    # as the "version" field in "Chart.yaml" file doesn't reflect the changes since the latest release.
  - name: Set chart version
    shell: bash
    # TODO: Use the branch name dynamically as part of the version when it's supported in GitHub:
    # https://github.com/orgs/community/discussions/70343
    run: |
      yq -i '.version = "0.0.0-ci-snapshot"' charts/camunda-platform/Chart.yaml
