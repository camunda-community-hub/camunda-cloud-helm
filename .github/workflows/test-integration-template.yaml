# Docs: https://github.com/camunda/camunda-platform-helm/blob/main/docs/gha-workflows.md
name: "Test - Integration - Template"

on:
  workflow_call:
    inputs:
      identifier:
        description: The unique identifier of used in the deployment hostname.
        required: true
        type: string
      camunda-helm-dir:
        required: false
        default: camunda-platform-latest
        type: string
      camunda-helm-git-ref:
        default: main
        type: string
      caller-git-ref:
        default: main
        type: string
      deployment-ttl:
        description: |
          Define a ttl for the lifespan of the deployment
        required: false
        default: ""
        type: string
      platforms:
        default: gke
        type: string
      flows:
        default: install
        type: string
      test-enabled:
        default: true
        type: boolean
      extra-values:
        description: Pass extra values to the Helm chart.
        type: string
        default: ""
      vault-secret-mapping:
        description: (optional) defines how to map Vault secrets to distro CI environment variables
        required: false
        type: string

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ inputs.identifier }}
  cancel-in-progress: true

env:
  # Vars with "CI_" prefix are used in the CI workflow only.
  # Vars with "TEST_" prefix are used in the test runner tool (Task).
  CI_DEPLOYMENT_TTL: ${{ inputs.deployment-ttl }}
  CI_HOSTNAME_BASE: ci.distro.ultrawombat.com

  TEST_IDENTIFIER: ${{ inputs.identifier }}

  # Docker Hub auth to avoid image pull rate limit.
  TEST_CREATE_DOCKER_LOGIN_SECRET: "TRUE"
  TEST_DOCKER_USERNAME: ${{ secrets.DISTRO_CI_DOCKER_USERNAME_DOCKERHUB }}
  TEST_DOCKER_PASSWORD: ${{ secrets.DISTRO_CI_DOCKER_PASSWORD_DOCKERHUB }}
  # Camunda registry auth to access WebModeler Docker image since it's not public.
  TEST_DOCKER_USERNAME_CAMUNDA_CLOUD: ${{ secrets.DISTRO_CI_DOCKER_USERNAME_CAMUNDA }}
  TEST_DOCKER_PASSWORD_CAMUNDA_CLOUD: ${{ secrets.DISTRO_CI_DOCKER_PASSWORD_CAMUNDA }}

jobs:
  test:
    name: ${{ matrix.distro.name }} - ${{ matrix.scenario.name }}
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      deployments: write
    strategy:
      fail-fast: false
      matrix:
        distro:
        - name: Kubernetes 1.27
          type: kubernetes
          platform: gke
          secret:
            cluster-name: DISTRO_CI_GCP_GKE_CLUSTER_NAME
            cluster-location: DISTRO_CI_GCP_GKE_CLUSTER_LOCATION
            workload-identity-provider: DISTRO_CI_GCP_WORKLOAD_IDENTITY_PROVIDER
            service-account: DISTRO_CI_GCP_SERVICE_ACCOUNT
          if: ${{ contains(inputs.platforms, 'gke') }}
        - name: OpenShift 4.14
          type: openshift
          version: 4.14
          platform: rosa
          secret:
            server-url: DISTRO_CI_OPENSHIFT_CLUSTER_URL
            username: DISTRO_CI_OPENSHIFT_CLUSTER_USERNAME
            password: DISTRO_CI_OPENSHIFT_CLUSTER_PASSWORD
          if: ${{ contains(inputs.platforms, 'rosa') }}
        scenario:
        - name: Chart Setup
          desc: Setup chart in production-like setup with Ingress and TLS.
          flow: install
          if: ${{ contains(inputs.flows, 'install') }}
        - name: Chart Upgrade
          desc: Upgrade chart from the latest released version to the current branch.
          flow: upgrade
          if: ${{ contains(inputs.flows, 'upgrade') }}
        exclude:
        - distro:
            if: false
        - scenario:
            if: false
    steps:
    - name: Print workflow inputs
      run: |
        echo "Workflow inputs:"
        echo "camunda-helm-git-ref: ${{ inputs.camunda-helm-git-ref }}"
        echo "platforms: ${{ inputs.platforms }}"
        echo "flows: ${{ inputs.flows }}"
        echo "vault-secret-mapping: ${{ inputs.vault-secret-mapping }}"

    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        # This is needed to load repo GH composite actions if the workflow triggered by workflow_call.
        repository: camunda/camunda-platform-helm
        ref: ${{ inputs.camunda-helm-git-ref }}

    # When there is a vault-secret-mapping input given, use Vault instead of GitHub secrets
    # and populate environment variables from Vault
    - name: Import Vault secrets
      id: secrets
      uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3.0.0
      if: inputs.vault-secret-mapping != ''
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        secrets: ${{ inputs.vault-secret-mapping }}
        exportEnv: true

    # Used to create/delete GitHub environment.
    # NOTE: The GH app requires "administration:write" access to be able to delete the GH environment.
    - name: Generate GitHub token
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2
      id: generate-github-token
      with:
        app_id: ${{ secrets.GH_APP_ID_DISTRO_CI_MANAGE_GH_ENVS }}
        private_key: ${{ secrets.GH_APP_PRIVATE_KEY_DISTRO_CI_MANAGE_GH_ENVS }}

    # TODO: Later, find a way to abstract the auth for different platforms.
    - name: Authenticate to GKE
      if: matrix.distro.platform == 'gke'
      uses: ./.github/actions/gke-login
      with:
        cluster-name: ${{ secrets[matrix.distro.secret.cluster-name] }}
        cluster-location: ${{ secrets[matrix.distro.secret.cluster-location] }}
        workload-identity-provider: ${{ secrets[matrix.distro.secret.workload-identity-provider] }}
        service-account: ${{ secrets[matrix.distro.secret.service-account] }}
    
    - name: Authenticate to OpenShift
      if: matrix.distro.platform == 'rosa'
      uses: redhat-actions/oc-login@5eb45e848b168b6bf6b8fe7f1561003c12e3c99d # v1
      with:
        openshift_server_url: ${{ secrets[matrix.distro.secret.server-url] }}
        openshift_username: ${{ secrets[matrix.distro.secret.username] }}
        openshift_password: ${{ secrets[matrix.distro.secret.password] }}

    # when TEST_IDENTIFIER is empty (in case of a push event or other), we must provide a fallback value that is unique
    - name: Ensure identifier is set
      run: |
        if [ -z "${{ env.TEST_IDENTIFIER }}" ]; then
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "TEST_IDENTIFIER=$calculatedSha" >> $GITHUB_ENV
        fi

    - name: Launch tests
      uses: ./.github/actions/chart-test
      with:
        platform: "${{ matrix.distro.platform }}"
        type: "${{ matrix.distro.type }}"

        identifier: "${{ env.TEST_IDENTIFIER }}"
        deployment-ttl: ${{ env.CI_DEPLOYMENT_TTL }}
        flow: "${{ matrix.scenario.flow }}"
        test-enabled: "${{ inputs.test-enabled }}"

        caller-git-ref: ${{ inputs.caller-git-ref  }}
        extra-values: ${{ inputs.extra-values }}
        ingress-hostname-base: ${{ env.CI_HOSTNAME_BASE }}
        chart-dir: ${{ inputs.camunda-helm-dir }}

        gh-token: ${{ steps.generate-github-token.outputs.token }}
