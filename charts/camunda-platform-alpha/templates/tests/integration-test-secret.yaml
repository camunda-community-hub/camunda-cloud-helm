{{- if (.Values.test).integration }}
apiVersion: v1
kind: Secret
metadata:
  name: integration-test
  labels:
    test: integration
type: Opaque
data:
  client-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "client-secret" "length" 16 "providedValues" (list "test.existingSecret") "context" $) }}
  identity-firstuser-password: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "identity-firstuser-password" "length" 16 "providedValues" (list "") "context" $) }}
  operate-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "operate-secret" "length" 16 "providedValues" (list "") "context" $) }}
  tasklist-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "tasklist-secret" "length" 16 "providedValues" (list "") "context" $) }}
  optimize-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "optimize-secret" "length" 16 "providedValues" (list "") "context" $) }}
  connectors-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "connectors-secret" "length" 16 "providedValues" (list "") "context" $) }}
  console-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "console-secret" "length" 16 "providedValues" (list "") "context" $) }}
  keycloak-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "keycloak-secret" "length" 16 "providedValues" (list "") "context" $) }}
  zeebe-secret: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "zeebe-secret" "length" 16 "providedValues" (list "") "context" $) }}
  # used for keycloak
  admin-password: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "admin-password" "length" 16 "providedValues" (list "") "context" $) }}
  # used for keycloak
  management-password: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "management-password" "length" 16 "providedValues" (list "") "context" $) }}
  # used for postgresql admin password
  postgres-password: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "postgres-password" "length" 16 "providedValues" (list "") "context" $) }}
  # used for postgresql user password
  password: {{ include "common.secrets.passwords.manage" (dict "secret" "integration-test" "key" "password" "length" 16 "providedValues" (list "") "context" $) }}
{{- end }}
